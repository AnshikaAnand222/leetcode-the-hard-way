"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[406],{3905:function(n,e,t){t.d(e,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var m=r.createContext({}),p=function(n){var e=r.useContext(m),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},l=function(n){var e=p(n.components);return r.createElement(m.Provider,{value:e},n.children)},s={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,m=n.parentName,l=u(n,["components","mdxType","originalType","parentName"]),c=p(t),d=o,f=c["".concat(m,".").concat(d)]||c[d]||s[d]||a;return t?r.createElement(f,i(i({ref:e},l),{},{components:t})):r.createElement(f,i({ref:e},l))}));function d(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=c;var u={};for(var m in e)hasOwnProperty.call(e,m)&&(u[m]=e[m]);u.originalType=n,u.mdxType="string"==typeof n?n:o,i[1]=u;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4458:function(n,e,t){t.r(e),t.d(e,{assets:function(){return l},contentTitle:function(){return m},default:function(){return d},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return s}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],u={description:"Author: @wingkwong | https://leetcode.com/problems/count-operations-to-obtain-zero/"},m="2169 - Count Operations to Obtain Zero (Easy)",p={unversionedId:"2100-2199/count-operations-to-obtain-zero-easy",id:"2100-2199/count-operations-to-obtain-zero-easy",title:"2169 - Count Operations to Obtain Zero (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/count-operations-to-obtain-zero/",source:"@site/solutions/2100-2199/2169-count-operations-to-obtain-zero-easy.md",sourceDirName:"2100-2199",slug:"/2100-2199/count-operations-to-obtain-zero-easy",permalink:"/solutions/2100-2199/count-operations-to-obtain-zero-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/solutions/2100-2199/2169-count-operations-to-obtain-zero-easy.md",tags:[],version:"current",lastUpdatedBy:"Wing-Kam Wong",lastUpdatedAt:1652366253,formattedLastUpdatedAt:"5/12/2022",sidebarPosition:2169,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/count-operations-to-obtain-zero/"},sidebar:"tutorialSidebar",previous:{title:"2167 - Minimum Time to Remove All Cars Containing Illegal Goods (Hard)",permalink:"/solutions/2100-2199/minimum-time-to-remove-all-cars-containing-illegal-goods-hard"},next:{title:"2170 - Minimum Operations to Make the Array Alternating (Medium)",permalink:"/solutions/2100-2199/minimum-operations-to-make-the-array-alternating-medium"}},l={},s=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Simulation",id:"approach-1-simulation",level:2}],c={toc:s};function d(n){var e=n.components,t=(0,o.Z)(n,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"2169---count-operations-to-obtain-zero-easy"},"2169 - Count Operations to Obtain Zero (Easy)"),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"You are given two ",(0,a.kt)("strong",{parentName:"p"},"non-negative")," integers ",(0,a.kt)("inlineCode",{parentName:"p"},"num1")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"num2"),"."),(0,a.kt)("p",null,"In one ",(0,a.kt)("strong",{parentName:"p"},"operation"),", if ",(0,a.kt)("inlineCode",{parentName:"p"},"num1 >= num2"),", you must subtract ",(0,a.kt)("inlineCode",{parentName:"p"},"num2")," from ",(0,a.kt)("inlineCode",{parentName:"p"},"num1"),", otherwise subtract ",(0,a.kt)("inlineCode",{parentName:"p"},"num1")," from ",(0,a.kt)("inlineCode",{parentName:"p"},"num2"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"For example, if ",(0,a.kt)("inlineCode",{parentName:"li"},"num1 = 5")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"num2 = 4"),", subtract ",(0,a.kt)("inlineCode",{parentName:"li"},"num2")," from ",(0,a.kt)("inlineCode",{parentName:"li"},"num1"),", thus obtaining ",(0,a.kt)("inlineCode",{parentName:"li"},"num1 = 1")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"num2 = 4"),". However, if ",(0,a.kt)("inlineCode",{parentName:"li"},"num1 = 4")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"num2 = 5"),", after one operation, ",(0,a.kt)("inlineCode",{parentName:"li"},"num1 = 4")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"num2 = 1"),".")),(0,a.kt)("p",null,"Return ",(0,a.kt)("em",{parentName:"p"},"the ",(0,a.kt)("strong",{parentName:"em"},"number of operations")," required to make either")," ",(0,a.kt)("inlineCode",{parentName:"p"},"num1 = 0")," ",(0,a.kt)("em",{parentName:"p"},"or")," ",(0,a.kt)("inlineCode",{parentName:"p"},"num2 = 0"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: num1 = 2, num2 = 3\nOutput: 3\nExplanation: \n- Operation 1: num1 = 2, num2 = 3. Since num1 < num2, we subtract num1 from num2 and get num1 = 2, num2 = 3 - 2 = 1.\n- Operation 2: num1 = 2, num2 = 1. Since num1 > num2, we subtract num2 from num1.\n- Operation 3: num1 = 1, num2 = 1. Since num1 == num2, we subtract num2 from num1.\nNow num1 = 0 and num2 = 1. Since num1 == 0, we do not need to perform any further operations.\nSo the total number of operations required is 3.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: num1 = 10, num2 = 10\nOutput: 1\nExplanation: \n- Operation 1: num1 = 10, num2 = 10. Since num1 == num2, we subtract num2 from num1 and get num1 = 10 - 10 = 0.\nNow num1 = 0 and num2 = 10. Since num1 == 0, we are done.\nSo the total number of operations required is 1. \n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"0 <= num1, num2 <= 10^5"))),(0,a.kt)("h2",{id:"approach-1-simulation"},"Approach 1: Simulation"),(0,a.kt)("p",null,"Just do what it says. If num1 >= num2, we subtract num2 from num1, otherwise subtract num1 from num2. Increase answer by 1 in each iteration."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int countOperations(int num1, int num2) {\n        int ans = 0;\n        while (num1 != 0 && num2 != 0) {\n            if (num1 >= num2) num1 -= num2;\n            else num2 -= num1;\n            ans += 1;\n        }\n        return ans;\n    }\n};\n")))}d.isMDXComponent=!0}}]);